eksctl create cluster --name merneat --region us-east-1 --node-type t2.micro --nodes-min 5 --nodes-max 10
aws eks update-kubeconfig --region us-west-2 --name merneat
kubectl get nodes

#sacale node group

eksctl scale nodegroup \
  --cluster merneat \
  --region us-east-1 \
  --name ng-195fc995  \
  --nodes 20 \
  --nodes-min 20 \
  --nodes-max 25


# add a new nodegroup

eksctl create nodegroup \
  --cluster merneat \
  --region us-east-1 \
  --name node-grp-2 \
  --node-type t2.micro \
  --nodes 5 \
  --nodes-min 5 \
  --nodes-max 10 \

#for downloading the policy
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json

#now adding the policy in our aws account
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json

#oidc connector
eksctl utils associate-iam-oidc-provider --region=us-east-1 --cluster=merneat --approve

#now creating a service account as well as a role which have the above policy and attaching role to the service account.
eksctl create iamserviceaccount --cluster=merneat --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::590183816178:policy/AWSLoadBalancerControllerIAMPolicy --approve --region=us-east-1


#install the aws load balancer using helm
helm repo add eks https://aws.github.io/eks-charts
helm repo update eks
helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=merneat --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
kubectl get deployment -n kube-system aws-load-balancer-controller


#argocd setup

kubectl create namespace argocd

kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.7.2/manifests/install.yaml

kubectl edit svc argocd-server -n argocd to (ClusterIP to LoadBalancer)

#get argocd initial password
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d 



#monitoring

#prometheus
helm repo add stable https://charts.helm.sh/stable
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm install prometheus prometheus-community/prometheus

#graphana
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
helm install grafana grafana/grafana

kubectl edit svc stable-kube-prometheus-sta-prometheus   (ClusterIP to LoadBalancer)
kubectl edit svc stable-grafana   (ClusterIP to LoadBalancer)

kubectl -n default get secret grafana -o jsonpath="{.data.admin-password}" | base64 -d 