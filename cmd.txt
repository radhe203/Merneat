eksctl create cluster --name merneat --region us-west-2 --node-type t2.micro --nodes-min 5 --nodes-max 10
aws eks update-kubeconfig --region us-west-2 --name merneat
kubectl get nodes

#for downloading the policy
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json

#now adding the policy in our aws account
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json

#oidc connector
eksctl utils associate-iam-oidc-provider --region=us-west-2 --cluster=merneat --approve

#now creating a service account as well as a role which have the above policy and attaching role to the service account.
eksctl create iamserviceaccount --cluster=merneat --namespace=kube-system --name=aws-load-balancer-controller --role-name AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::<your-account-id>:policy/AWSLoadBalancerControllerIAMPolicy --approve --region=us-west-2


#install the aws load balancer using helm
helm repo add eks https://aws.github.io/eks-charts
helm repo update eks
helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=merneat --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
kubectl get deployment -n kube-system aws-load-balancer-controller


#argocd setup

kubectl create namespace argocd

kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.7.2/manifests/install.yaml

kubectl edit svc argocd-server -n argocd to (ClusterIP to LoadBalancer)

#get argocd initial password
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d 

